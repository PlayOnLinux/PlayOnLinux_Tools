#!/bin/bash

VERSION=$1
BRANCH=$2

if [ "$BRANCH" = "wine-stable" ]
then
CONFIGSUP=", wine-unstable"
else
CONFIGSUP=", wine-stable"
fi

if [ "$VERSION" = "" ]
then
	echo "You need to specify a version"
	exit	
fi
DIRECTORY="/home/playonli/wine_packager"
#supprime l'ancien dossier playonlinux -- au cas o√π
rm -rf $DIRECTORY

mkdir -p $DIRECTORY
echo "Welcome to PlayOnLinux Wine packager script"
echo "Building $VERSION from POL file"
# Generate control file
echo "Generating control file"
mkdir -p "$DIRECTORY/DEBIAN"
cd "$DIRECTORY/DEBIAN"
cat << EOF > control
Package: $BRANCH
Version: $VERSION
Section: base
Priority: optional
Architecture: all
Pre-Depends: dpkg
Depends: procps, binfmt-support (>= 1.2.18), ttf-mscorefonts-installer | msttcorefonts
Recommends: ttf-liberation, playonlinux
Conflicts: binfmt-support (<< 1.2.18), winesetuptk, wine-doc, wine-utils, libwine-alsa, libwine-arts, libwine-capi, libwine-cms, libwine-esd, libwine-gl, libwine-gphoto2, libwine-jack, libwine-ldap, libwine-nas, libwine-print, libwine-sane, libwine-twain, xwine, libwine, wine, wine1.2, wine-1.2, wine1.3, wine-1.3$CONFIGSUP
Replaces: winesetuptk, wine-doc, wine-utils, libwine-alsa, libwine-arts, libwine-capi, libwine-cms, libwine-esd, libwine-gl, libwine-gphoto2, libwine-jack, libwine-ldap, libwine-nas, libwine-print, libwine-sane, libwine-twain, xwine
Maintainer: PlayOnLinux team
Description: Microsoft Windows Compatibility Layer (Binary Emulator and Library)
 Wine is a compatibility layer for running Windows applications on Linux.
 Applications are run at full speed without the need of cpu emulation. Wine
 does not require Microsoft Windows, however it can use native system dll
 files in place of its own if they are available.
 .
 This package includes a program loader for running unmodified Windows executables
 as well as the Wine project's free version of the Windows API for running programs
 ported from Windows.
EOF

cd "$DIRECTORY"
tar -xvf /home/poladmin/wine/linux-i386/PlayOnLinux-wine-$VERSION.pol "wineversion/$VERSION" 
mv wineversion/$VERSION/usr ./
rm -r "wineversion"


# Making .deb
echo "Building wine-$VERSION.deb"
cd "$DIRECTORY"
cd ..
fakeroot dpkg-deb --build wine_packager

# Moving .deb
echo "Moving deb"
mv wine_packager.deb "/home/playonli/www/deb/incoming/wine-$VERSION.deb"
